[
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n3:34 am</dco> &nbsp;<qco> is chicken meat?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n2:53 am</dco> &nbsp;<qco> are you running for president in this election, or the next one?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n2:40 am</dco> &nbsp;<qco> why are you up so early?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n2:29 am</dco> &nbsp;<qco> where are we going</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n2:26 am</dco> &nbsp;<qco> Are you a philosopher</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n2:13 am</dco> &nbsp;<qco> How do you make stuff?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n2:12 am</dco> &nbsp;<qco> What accomplishment are you most proud of?&nbsp;</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n2:06 am</dco> &nbsp;<qco> Why do you have all the wisdom?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n1:54 am</dco> &nbsp;<qco> is it true that if you can't remember something it's not worth remembering?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n12:49 am</dco> &nbsp;<qco> What's your favorite kind of music?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n12:07 am</dco> &nbsp;<qco> What's your opinion on grapes</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.6.20&nbsp; \n12:01 am</dco> &nbsp;<qco> is bagels worth it</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n11:30 pm</dco> &nbsp;<qco> How do I know what type of canned beans to buy?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n10:59 pm</dco> &nbsp;<qco> What is the best fruit?\n<br></qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n9:35 pm</dco> &nbsp;<qco> what was the best thing before sliced bread?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n8:39 pm</dco> &nbsp;<qco> What was the writing and recording session like for Slow Down?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n8:28 pm</dco> &nbsp;<qco> how do i sleep</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n7:56 pm</dco> &nbsp;<qco> what is your inspiration to write music?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n7:51 pm</dco> &nbsp;<qco> Opinions on cats?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n7:33 pm</dco> &nbsp;<qco> What's your favorite type of Firework?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n6:58 pm</dco> &nbsp;<qco> Is it possible to create a song that every human enjoys?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n6:48 pm</dco> &nbsp;<qco> they say there is so little hope in saving the planet from climate change. is that true</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n6:37 pm</dco> &nbsp;<qco> Bill, which song was your favorite one you made?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n6:33 pm</dco> &nbsp;<qco> Which video that you made is your favourite&nbsp;</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n6:23 pm</dco> &nbsp;<qco> Do you think being happy is a good ultimate goal ?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n6:05 pm</dco> &nbsp;<qco> So he says his name is Steve and then he says his name isn't Steve, then at the end he goes on to tell us that his name is in fact Steve, can you confirm what Steve/non-Steve's name is?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n6:01 pm</dco> &nbsp;<qco> Why are pillows soft</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n5:57 pm</dco> &nbsp;<qco> Are you making a new video soon?&nbsp;</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n4:43 pm</dco> &nbsp;<qco> How do i know if im awake</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n4:06 pm</dco> &nbsp;<qco> Are you a philosopher</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n3:38 pm</dco> &nbsp;<qco> What genre of music would you have the least interest in writing?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n3:36 pm</dco> &nbsp;<qco> Can you tell me the EXACT day where you'll release your next video on YouTube</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n3:18 pm</dco> &nbsp;<qco> Hey Bill, the way 2020 is going, I'm afraid Mt. St. Helens is about to blow up. Will it be a fine, swell day?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n2:58 pm</dco> &nbsp;<qco> Are you working on a new video?</qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; And if so then is it longer than history of the entire world\n<br></qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n2:31 pm</dco> &nbsp;<qco> how do i find my question</qco> </h3><a href=\"q.php?date=202006222018\" target=\"_blank\">here</a><remqq></remqq>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n1:46 pm</dco> &nbsp;<qco> How many new videos are you making? Please answer this question in Latin numerical characters.</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n1:29 pm</dco> &nbsp;<qco> Are you working on a project rn?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n1:22 pm</dco> &nbsp;<qco> I can't come up with really jazz-y chord progression on my guitars, but on my 25 keys keyboard I can. Should I buy a bigger keyboard? Could it inspire me more, since I can make bigger chords?&nbsp;</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n12:57 pm</dco> &nbsp;<qco> Practical uses for glue?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n12:45 pm</dco> &nbsp;<qco> How do i remember stuff?\n<br></qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n12:44 pm</dco> &nbsp;<qco> what do you use to make your animations?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n12:35 pm</dco> &nbsp;<qco> how to be enough</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n12:33 pm</dco> &nbsp;<qco> I miss your songs, are you releasing new ones soon?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n11:55 am</dco> &nbsp;<qco> what is the greatest achievement in human history?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n11:51 am</dco> &nbsp;<qco> How so I ensure a good financial future as a current college student in the turbulent time that is this present day?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n11:30 am</dco> &nbsp;<qco> What's the answer to the universe?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n10:40 am</dco> &nbsp;<qco> How many lobsters does it take to operate a tesla</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n9:37 am</dco> &nbsp;<qco> What do you think about old people?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n8:24 am</dco> &nbsp;<qco> favourite universe?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>7.5.20&nbsp; \n7:23 am</dco> &nbsp;<qco> Judging by some of your previous answers, there are certain \"phases\" during this whole graphics-department-reinvention. Like, when you talked about LOD, bpy and so forth. But recently, I couldn't find any hints on what you're doing now. Could you give us a tiny, little hint?</qco> </h3><a href=\"ui1173evt6ttzja.html\" target=\"_blank\">sure</a>\n<div class=\"answer-block\">\n<br>\n\n<br>\nfrompoiseob=bpy.data.objects[frompoise]<br>\ntopoiseob=bpy.data.objects[topoise]<br>\n<br>\nprint(\"frompoise=\"+str(frompoise))<br>\nprint(\"topoise=\"+str(topoise))<br>\nfromparts=[]<br>\ntoparts=[]<br>\nfrombits=[]<br>\ntobits=[]<br>\nprint(\"frompoiseob=\"+str(frompoiseob))<br>\nprint(\"topoiseob=\"+str(topoiseob))<br>\n<br>\n<br>\nfor poise in [frompoise, topoise]:<br>\n poisob=bpy.data.objects[poise]<br>\n bits=[]<br>\n parts=[]<br>\n for ob in bpy.data.objects:<br>\n&nbsp;&nbsp;#if ob.hide_viewport==False:<br>\n&nbsp;&nbsp;&nbsp;if ob.constraints!=None:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;for con in ob.constraints:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if con.type=='COPY_TRANSFORMS':<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ob.animation_data!=None:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for driver in ob.animation_data.drivers:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for var in driver.driver.variables:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for target in var.targets:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if target.id==poisob: <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"target.id.name=\"+str(target.id.name))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"poise=\"+str(poise))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;datapath=driver.data_path<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"datapath=\"+str(datapath))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if datapath.endswith('influence')==True:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec(\"bit=ob.\"+(str(datapath)[:-10])+\".target\")<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec(\"conzo=ob.\"+(str(datapath)[:-10]))<br>\n <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if bit not in bits:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bits.append(bit)<br>\n <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ob not in parts:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;parts.append(ob)<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\n if poise==frompoise:<br>\n&nbsp;&nbsp;frombits=bits<br>\n&nbsp;&nbsp;fromparts=parts<br>\n elif poise==topoise:<br>\n&nbsp;&nbsp;toparts=parts<br>\n&nbsp;&nbsp;tobits=bits&nbsp;&nbsp;<br>\n<br>\nprint(\"frompoise=\"+str(frompoise))<br>\nprint(\"topoise=\"+str(topoise))<br>\nprint(\"fromparts=\"+str(fromparts))<br>\nprint(\"toparts=\"+str(toparts))<br>\nprint(\"frombits=\"+str(frombits))<br>\nprint(\"tobits=\"+str(tobits))<br>\n<br>\nufromparts=fromparts<br>\nufrombits=frombits<br>\nutoparts=[]<br>\nutobits=[]<br>\n<br>\n<br>\nif selectmethod=='all':<br>\n ufromparts=fromparts<br>\n ufrombits=frombits<br>\n<br>\n for frompart in fromparts:<br>\n&nbsp;&nbsp;if frompart in toparts and frompart not in utoparts:<br>\n&nbsp;&nbsp;&nbsp;utoparts.append(frompart)<br>\n for frombit in frombits:<br>\n&nbsp;&nbsp;if frombit in tobits and frombit not in utobits:<br>\n&nbsp;&nbsp;&nbsp;utobits.append(frombit)<br>\nelif selectmethod=='custom':<br>\n for frompart in fromparts:<br>\n&nbsp;&nbsp;if frompart in bpy.context.selected_objects and frompart not in ufromparts:<br>\n&nbsp;&nbsp;&nbsp;ufromparts.append(fromparts)<br>\n #print('YES, ITS CUSTOM')<br>\n print(\"toparts=\"+str(toparts))<br>\n for part in toparts:<br>\n&nbsp;&nbsp;if part in bpy.context.selected_objects:<br>\n&nbsp;&nbsp;&nbsp;utoparts.append(part)<br>\n ufrombits=[]<br>\n for frombit in frombits:<br>\n&nbsp;&nbsp;for ob in ufromparts:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;#if ob.hide_viewport==False:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"MESSUP OB=\"+str(ob))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ob.constraints!=None:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for con in ob.constraints:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if con.type=='COPY_TRANSFORMS':<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ob.animation_data!=None:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for driver in ob.animation_data.drivers:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for var in driver.driver.variables:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for target in var.targets:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if target.id==frompoiseob: <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"target.id.name=\"+str(target.id.name))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"poise=\"+str(poise))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;datapath=driver.data_path<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"datapath=\"+str(datapath))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if datapath.endswith('influence')==True:<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec(\"ufrombit=ob.\"+(str(datapath)[:-10])+\".target\")<br>\n<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec(\"conzo=ob.\"+(str(datapath)[:-10]))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"UFROMBIT=\"+str(ufrombit))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ufrombit==frombit and ufrombit not in ufrombits:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ufrombits.append(ufrombit)<br>\n<br>\n utobits=[]<br>\n print(\"UTOPARTS=\"+str(utoparts))<br>\n for ob in utoparts:&nbsp;&nbsp;&nbsp;<br>\n&nbsp;&nbsp;&nbsp;#if ob.hide_viewport==False:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;#print(\"MESSUP OB=\"+str(ob))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;if ob.constraints!=None:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for con in ob.constraints:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if con.type=='COPY_TRANSFORMS':<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ob.animation_data!=None:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for driver in ob.animation_data.drivers:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for var in driver.driver.variables:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for target in var.targets:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if target.id==topoiseob: <br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"target.id.name=\"+str(target.id.name))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"poise=\"+str(poise))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;datapath=driver.data_path<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"datapath=\"+str(datapath))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if datapath.endswith('influence')==True:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec(\"ubit=ob.\"+(str(datapath)[:-10])+\".target\")<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exec(\"conzo=ob.\"+(str(datapath)[:-10]))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;#print(\"UBIT=\"+str(ubit))<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ubit not in utobits:<br>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;utobits.append(ubit)<br>\n<br>\n<br>\n<br>\n<br>\n<br>\nprint(\"ufromparts=\"+str(ufromparts))<br>\nprint(\"ufrombits=\"+str(ufrombits))<br>\nprint(\"utoparts=\"+str(utoparts))<br>\nprint(\"utobits=\"+str(utobits))<br>\n<br>\nn=-1<br>\nfor bit in utobits:<br>\n n=n+1<br>\n print(\"bloc=\"+str(bit))<br>\n print(\"uloc=\"+str(ufrombits[n]))<br>\n print(\"bloc=\"+str(bit.location))<br>\n<br>\n print(\"uloc\"+str(ufrombits[n].location))<br>\n bit.location=ufrombits[n].location<br>\n bit.rotation_euler=ufrombits[n].rotation_euler<br>\n<br>\n<br>\n<br>\n<br>\n</div>"
  }
]
