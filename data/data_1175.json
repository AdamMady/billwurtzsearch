[
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n9:30 am</dco> &nbsp;<qco> what bad thing did you do</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n8:38 am</dco> &nbsp;<qco> the earth is flat hotdog or donut?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n6:55 am</dco> &nbsp;<qco> why do i get overwhelmed with anxiety when talking to someone</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n6:37 am</dco> &nbsp;<qco> what's your opinion on avocado</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n6:17 am</dco> &nbsp;<qco> Are any new songs coming up? </qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sorry if this bothers you from being asked too often.</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n5:57 am</dco> &nbsp;<qco> do you think the boys down in congress get mad?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n5:36 am</dco> &nbsp;<qco> What movies do you recommend for this stay at home order</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n5:21 am</dco> &nbsp;<qco> Did you really quit school?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n5:20 am</dco> &nbsp;<qco> Do you have any tips for procrastination?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n5:20 am</dco> &nbsp;<qco> what have you been doing to entertain yourself in self isolation</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n5:17 am</dco> &nbsp;<qco> why do you think people like to say less is more?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n5:12 am</dco> &nbsp;<qco> is everything music?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n5:09 am</dco> &nbsp;<qco> How did you start sleeping randomly </qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(as concluded in the reality, improv and notebook pages) </qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and why?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n4:48 am</dco> &nbsp;<qco> How do you feel when answering all these questions?</qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Is it like a meditative practice?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n4:25 am</dco> &nbsp;<qco> I'm getting ready to write a song. I know it's going to be a song about how happy I am to not have to be a child anymore, now that I am much older than just a child and I can live my dreams as I dreamed them when I was too young to live them. I'm having a hard time deciding which key to write the song in - what's the best key to start in?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n3:41 am</dco> &nbsp;<qco> what is your musical writing process?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n3:26 am</dco> &nbsp;<qco> your songs make me feel happy. will you ever make an album of happy songs?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n3:08 am</dco> &nbsp;<qco> do you have the bpm equivalent of perfect pitch? is that a thing?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n3:01 am</dco> &nbsp;<qco> are you the actual bob ross of music?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n2:55 am</dco> &nbsp;<qco> prediction: since you've swapped from answering questions about the countdown timer's # and instead just ones w/ the reply \"there's a timer\" you've hit the transition period between peak knowledge of video skills and go time on video production</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n2:50 am</dco> &nbsp;<qco> is any amount of how you write and work based on the enthusiasm you had as a kid first discovering creating art</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n2:42 am</dco> &nbsp;<qco> thoughts on fantasy?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n1:32 am</dco> &nbsp;<qco> why does every news station have to have a spinning globe graphic.&nbsp;</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n1:26 am</dco> &nbsp;<qco> do you enjoy bread philosophy</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n1:21 am</dco> &nbsp;<qco> i have seen many theory's and now I'm wondering how you are going to expand the bill wurtz music universe</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n12:58 am</dco> &nbsp;<qco> aren't the thing we create just an amalgamation of all the things other people have made? </qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;because we take inspiration from them whether intentionally or not? for example, my work is an amalgamation of bill wurtz's and a bunch of other people's creations mashed together to make something different, whether that is noticeable or not. is nothing ever truly unique?</qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if everyone takes inspiration from each other, then who was the original source of inspiration?</qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; how bout you? what is your work made of?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.10.20&nbsp; \n12:48 am</dco> &nbsp;<qco> My own song is stuck in my mind what does that means?</qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; It happens to you bill?&nbsp;</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n11:26 pm</dco> &nbsp;<qco> Thoughts on A=432 Hz?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n11:22 pm</dco> &nbsp;<qco> do you think people who play the lick are funny</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n10:51 pm</dco> &nbsp;<qco> do you have any other passions besides music and video creating, and if so what are they?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n10:47 pm</dco> &nbsp;<qco> Can we have a little sneak peek or small hint on your B I G project?</qco> </h3><a href=\"twcudry97dgx3g4.html\" target=\"_blank\">sure</a>\n<div class=\"answer-block\">\n<meta&nbsp;name=\"viewport\"&nbsp;content=\"width=device-width,&nbsp;initial-scale=1.0,\"><link&nbsp;rel=\"stylesheet\"&nbsp;href=\"mainq.css\"&nbsp;media=\"screen\"&nbsp;>&nbsp;<link&nbsp;rel=\"stylesheet\"&nbsp;href=\"noteq.css\"&nbsp;media=\"screen&nbsp;and&nbsp;(max-device-width:&nbsp;800px)\"&nbsp;>import&nbsp;bpy<br>\n<br>\n<br>\n<br>\nbpy.ops.ed.undo_push()<br>\nlist=[]<br>\nnum=KMVAR_num<br>\nfor&nbsp;item&nbsp;in&nbsp;KMVAR_list.split(','):<br>\n&nbsp;list.append(item)<br>\n#print(list)<br>\n<br>\nobjnamestring=KMVAR_objnames<br>\nexec(\"objnames=\"+str(objnamestring))<br>\n#print(objnames)<br>\n<br>\nfor&nbsp;n&nbsp;in&nbsp;range(0,int(num)+1):<br>\n&nbsp;#print(\"n=\"+str(n))<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AlocX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+0]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AlocY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+1]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AlocZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+2]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"ArotX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+3]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"ArotY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+4]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"ArotZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+5]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AscaleX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+6]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AscaleY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+7]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AscaleZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+8]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BlocX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+9]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BlocY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+10]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BlocZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+11]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BrotX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+12]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BrotY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+13]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BrotZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+14]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BscaleX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+15]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BscaleY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+16]\")<br>\n&nbsp;exec(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BscaleZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+17]\")<br>\n<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AlocX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+0]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AlocY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+1]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AlocZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+2]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"ArotX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+3]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"ArotY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+4]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"ArotZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+5]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AscaleX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+6]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AscaleY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+7]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AscaleZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+8]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BlocX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+9]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BlocY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+10]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BlocZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+11]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BrotX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+12]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BrotY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+13]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BrotZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+14]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BscaleX=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+15]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BscaleY=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+16]\")<br>\n&nbsp;#print(\"o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"BscaleZ=list[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"*18+17]\")<br>\n<br>\n#print(\"o0AlocX=\"+str(o0AlocX))<br>\n#print(o0AlocY)<br>\n#print(o0AlocZ)<br>\n#print(o0ArotX)<br>\n#print(o0ArotY)<br>\n#print(o0ArotZ)<br>\n#print(o0AscaleX)<br>\n#print(o0AscaleY)<br>\n#print(o0AscaleZ)<br>\n<br>\n#print(\"o0BlocX=\"+str(o0BlocX))<br>\n#print(o0BlocY)<br>\n#print(o0BlocZ)<br>\n#print(o0BrotX)<br>\n#print(o0BrotY)<br>\n#print(o0BrotZ)<br>\n#print(o0BscaleX)<br>\n#print(o0BscaleY)<br>\n#print(o0BscaleZ)<br>\n<br>\n#print(\"o1AlocX=\"+str(o1AlocX))<br>\n#print(o1AlocY)<br>\n#print(o1AlocZ)<br>\n#print(o1ArotX)<br>\n#print(o1ArotY)<br>\n#print(o1ArotZ)<br>\n#print(o1AscaleX)<br>\n#print(o1AscaleY)<br>\n#print(o1AscaleZ)<br>\n<br>\n#print(\"o1BlocX=\"+str(o1BlocX))<br>\n#print(o1BlocY)<br>\n#print(o1BlocZ)<br>\n#print(o1BrotX)<br>\n#print(o1BrotY)<br>\n#print(o1BrotZ)<br>\n#print(o1BscaleX)<br>\n#print(o1BscaleY)<br>\n#print(o1BscaleZ)<br>\n<br>\n<br>\n<br>\nobjs&nbsp;=&nbsp;[]<br>\nfor&nbsp;objname&nbsp;in&nbsp;objnames:<br>\n&nbsp;objs.append(bpy.data.objects[str(objname)])<br>\n#print(objs)<br>\n<br>\nfor&nbsp;n&nbsp;in&nbsp;range(0,int(num)+1):<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].location.x&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].location.y&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].location.z&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].rotation_euler.x&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].rotation_euler.y&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].rotation_euler.z&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].scale.x&nbsp;=&nbsp;1\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].scale.y&nbsp;=&nbsp;1\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].scale.z&nbsp;=&nbsp;1\")<br>\n<br>\nacs&nbsp;=&nbsp;[]<br>\nn=-1<br>\nfor&nbsp;obj&nbsp;in&nbsp;objs:<br>\n&nbsp;n=n+1<br>\n&nbsp;for&nbsp;other&nbsp;in&nbsp;bpy.data.objects:<br>\n&nbsp;&nbsp;other.select_set(False)<br>\n&nbsp;objs[n].select_set(True)&nbsp;&nbsp;&nbsp;&nbsp;<br>\n&nbsp;bpy.context.view_layer.objects.active&nbsp;=&nbsp;objs[n]<br>\n<br>\n&nbsp;acname&nbsp;=&nbsp;\"o\"+str(n)+\"action\"+str(KMVAR_time)<br>\n&nbsp;acs.append(bpy.data.actions.new(acname))<br>\n<br>\nlocX=[]<br>\nlocY=[]<br>\nlocZ=[]<br>\nrotX=[]<br>\nrotY=[]<br>\nrotZ=[]<br>\nscaleX=[]<br>\nscaleY=[]<br>\nscaleZ=[]<br>\nn=-1<br>\nfor&nbsp;obj&nbsp;in&nbsp;objs:<br>\n&nbsp;n=n+1<br>\n&nbsp;for&nbsp;other&nbsp;in&nbsp;bpy.data.objects:<br>\n&nbsp;&nbsp;other.select_set(False)<br>\n&nbsp;objs[n].select_set(True)&nbsp;&nbsp;&nbsp;&nbsp;<br>\n&nbsp;bpy.context.view_layer.objects.active&nbsp;=&nbsp;objs[n]<br>\n&nbsp;locX.append(acs[n].fcurves.new(data_path=\"location\",index=0))<br>\n&nbsp;locY.append(acs[n].fcurves.new(data_path=\"location\",index=1))<br>\n&nbsp;locZ.append(acs[n].fcurves.new(data_path=\"location\",index=2))<br>\n&nbsp;rotX.append(acs[n].fcurves.new(data_path=\"rotation_euler\",index=0))<br>\n&nbsp;rotY.append(acs[n].fcurves.new(data_path=\"rotation_euler\",index=1))<br>\n&nbsp;rotZ.append(acs[n].fcurves.new(data_path=\"rotation_euler\",index=2))<br>\n&nbsp;scaleX.append(acs[n].fcurves.new(data_path=\"scale\",index=0))<br>\n&nbsp;scaleY.append(acs[n].fcurves.new(data_path=\"scale\",index=1))<br>\n&nbsp;scaleZ.append(acs[n].fcurves.new(data_path=\"scale\",index=2))<br>\nprint(\"locX&nbsp;should&nbsp;contain&nbsp;2&nbsp;fcurves:\"&nbsp;+str(locX))<br>\n<br>\n<br>\n<br>\n#so&nbsp;now&nbsp;we&nbsp;have&nbsp;lists&nbsp;of&nbsp;2,&nbsp;for&nbsp;example,&nbsp;locX&nbsp;is&nbsp;now&nbsp;a&nbsp;list&nbsp;containing&nbsp;2&nbsp;f-curves.&nbsp;for&nbsp;obj&nbsp;0&nbsp;and&nbsp;1<br>\n<br>\n#this&nbsp;makes&nbsp;it&nbsp;work&nbsp;for&nbsp;1.&nbsp;but&nbsp;you&nbsp;need&nbsp;to&nbsp;make&nbsp;it&nbsp;work&nbsp;for&nbsp;2.&nbsp;in&nbsp;the&nbsp;below&nbsp;example,&nbsp;there&nbsp;already&nbsp;exists&nbsp;an&nbsp;fcurve&nbsp;for&nbsp;each&nbsp;one&nbsp;of&nbsp;those&nbsp;names&nbsp;in&nbsp;the&nbsp;list.&nbsp;those&nbsp;are&nbsp;a&nbsp;variable&nbsp;name,&nbsp;which&nbsp;is&nbsp;an&nbsp;fcurve.&nbsp;but&nbsp;now,&nbsp;instead,&nbsp;there&nbsp;are&nbsp;lists&nbsp;of&nbsp;2.&nbsp;What&nbsp;this&nbsp;originally&nbsp;did&nbsp;was,&nbsp;it&nbsp;adds&nbsp;2&nbsp;keyframes&nbsp;(A&nbsp;and&nbsp;B)&nbsp;to&nbsp;each&nbsp;fcurve.&nbsp;&nbsp;Now&nbsp;i've&nbsp;indented&nbsp;the&nbsp;whole&nbsp;thing,&nbsp;and&nbsp;it's&nbsp;going&nbsp;to&nbsp;run&nbsp;through&nbsp;twice.&nbsp;wherever&nbsp;you&nbsp;would&nbsp;see&nbsp;\"locX\"&nbsp;the&nbsp;set,&nbsp;it&nbsp;needs&nbsp;to&nbsp;be&nbsp;\"locX[n]\",&nbsp;and&nbsp;wherever&nbsp;it&nbsp;is&nbsp;used&nbsp;to&nbsp;invoke&nbsp;the&nbsp;variable&nbsp;\"AlocX\",&nbsp;it&nbsp;needs&nbsp;to&nbsp;instead&nbsp;be&nbsp;\"o\"+str(n)+\"AlocX\".&nbsp;done√<br>\n<br>\n<br>\nprint(\"locX&nbsp;set=\"+str(n))<br>\nn=-1<br>\nfor&nbsp;obj&nbsp;in&nbsp;objs:<br>\n&nbsp;n=n+1<br>\n&nbsp;for&nbsp;other&nbsp;in&nbsp;bpy.data.objects:<br>\n&nbsp;&nbsp;other.select_set(False)<br>\n&nbsp;objs[n].select_set(True)&nbsp;&nbsp;&nbsp;&nbsp;<br>\n&nbsp;bpy.context.view_layer.objects.active&nbsp;=&nbsp;objs[n]<br>\n<br>\n<br>\n&nbsp;fnames=[\"locX\",\"locY\",\"locZ\",\"rotX\",\"rotY\",\"rotZ\",\"scaleX\",\"scaleY\",\"scaleZ\"]<br>\n&nbsp;for&nbsp;fname&nbsp;in&nbsp;fnames:<br>\n&nbsp;&nbsp;exec(\"Aco=o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"A\"+str(fname))<br>\n&nbsp;&nbsp;exec(\"Bco=o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"B\"+str(fname))<br>\n&nbsp;&nbsp;exec(\"f=\"+str(fname)+\"[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"]\")<br>\n&nbsp;&nbsp;f.keyframe_points.add(2)<br>\n&nbsp;&nbsp;f.keyframe_points[0].co&nbsp;=&nbsp;(1,float(Aco))<br>\n&nbsp;&nbsp;f.keyframe_points[1].co&nbsp;=&nbsp;(61,float(Bco))<br>\n&nbsp;&nbsp;f.keyframe_points[0].interpolation&nbsp;=&nbsp;'LINEAR'<br>\n&nbsp;&nbsp;f.keyframe_points[1].interpolation&nbsp;=&nbsp;'LINEAR'<br>\n<br>\nfor&nbsp;n&nbsp;in&nbsp;range(0,int(num)+1):<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].location.x&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].location.y&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].location.z&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].rotation_euler.x&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].rotation_euler.y&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].rotation_euler.z&nbsp;=&nbsp;0\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].scale.x&nbsp;=&nbsp;1\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].scale.y&nbsp;=&nbsp;1\")<br>\n&nbsp;exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].scale.z&nbsp;=&nbsp;1\")<br>\n<br>\n<br>\nbpy.ops.object.empty_add(type='CUBE',&nbsp;radius=.1,location=(0,0,0))<br>\ncontrol&nbsp;=&nbsp;bpy.context.active_object<br>\nbpy.context.active_object.name=(\"control\"+str(KMVAR_time))<br>\ncontrolname&nbsp;=&nbsp;bpy.context.active_object.name<br>\n<br>\n<br>\nfor&nbsp;n&nbsp;in&nbsp;range(0,int(num)+1):<br>\n&nbsp;for&nbsp;other&nbsp;in&nbsp;bpy.data.objects:<br>\n&nbsp;&nbsp;other.select_set(False)<br>\n&nbsp;objs[n].select_set(True)&nbsp;&nbsp;&nbsp;&nbsp;<br>\n&nbsp;bpy.context.view_layer.objects.active&nbsp;=&nbsp;objs[n]<br>\n&nbsp;obj=objs[n]<br>\n&nbsp;const&nbsp;=&nbsp;obj.constraints<br>\n&nbsp;print(const)<br>\n&nbsp;accon&nbsp;=&nbsp;const.new('ACTION')<br>\n&nbsp;print(accon)<br>\n&nbsp;acconname&nbsp;=&nbsp;str(accon.name)<br>\n&nbsp;print(acconname)<br>\n&nbsp;#while&nbsp;obj.constraints[0]&nbsp;!=&nbsp;accon:<br>\n&nbsp;my_context&nbsp;=&nbsp;bpy.context.copy()<br>\n&nbsp;my_context[\"constraint\"]&nbsp;=&nbsp;accon<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')&nbsp;<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')<br>\n&nbsp;bpy.ops.constraint.move_up(my_context,&nbsp;constraint=str(acconname),&nbsp;owner='OBJECT')<br>\n&nbsp;if&nbsp;obj.constraints[0]&nbsp;==&nbsp;accon:<br>\n&nbsp;&nbsp;print(obj.constraints[0])<br>\n&nbsp;&nbsp;print(accon)<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n&nbsp;acs[n].id_root&nbsp;=&nbsp;'OBJECT'<br>\n&nbsp;accon.target&nbsp;=&nbsp;bpy.data.objects[str(control.name)]<br>\n&nbsp;accon.action&nbsp;=&nbsp;bpy.data.actions[acs[n].name]<br>\n&nbsp;accon.max&nbsp;=&nbsp;10<br>\n<br>\n&nbsp;accon.frame_start&nbsp;=&nbsp;1<br>\n&nbsp;accon.frame_end&nbsp;=&nbsp;61<br>\n&nbsp;accon.transform_channel&nbsp;=&nbsp;'LOCATION_Z'<br>\n<br>\n<br>\n&nbsp;print(o0AlocX)<br>\n<br>\n<br>\n<br>\n<br>\n#bump&nbsp;all&nbsp;to&nbsp;left&nbsp;1<br>\n<br>\nm=[0,9]<br>\nfor&nbsp;m&nbsp;in&nbsp;m:<br>\n&nbsp;for&nbsp;n&nbsp;in&nbsp;range&nbsp;(1,9):<br>\n&nbsp;&nbsp;n=m+n<br>\n&nbsp;&nbsp;print(n)<br>\n<br>\n<br>\n&nbsp;&nbsp;bpy.context.scene.MOM_Items[n].id_type=&nbsp;bpy.context.scene.MOM_Items[n+1].id_type&nbsp;<br>\n&nbsp;&nbsp;bpy.context.scene.MOM_Items[n].id_type=&nbsp;bpy.context.scene.MOM_Items[n+1].id_type<br>\n&nbsp;&nbsp;bpy.context.scene.MOM_Items[n].id.objects=&nbsp;bpy.context.scene.MOM_Items[n+1].id.objects<br>\n&nbsp;&nbsp;bpy.context.scene.MOM_Items[n].array&nbsp;=&nbsp;bpy.context.scene.MOM_Items[n+1].array<br>\n&nbsp;&nbsp;bpy.context.scene.MOM_Items[n].data_path&nbsp;=&nbsp;bpy.context.scene.MOM_Items[n+1].data_path<br>\n&nbsp;&nbsp;bpy.context.scene.MOM_Items[n].rescale_mode&nbsp;=&nbsp;bpy.context.scene.MOM_Items[n+1].rescale_mode<br>\n&nbsp;&nbsp;bpy.context.scene.MOM_Items[n].rescale_blender_low&nbsp;=bpy.context.scene.MOM_Items[n+1].rescale_blender_low&nbsp;<br>\n&nbsp;&nbsp;bpy.context.scene.MOM_Items[n].rescale_blender_high=&nbsp;bpy.context.scene.MOM_Items[n+1].rescale_blender_high<br>\n&nbsp;&nbsp;bpy.context.scene.MOM_Items[n].mode&nbsp;=&nbsp;bpy.context.scene.MOM_Items[n+1].mode&nbsp;<br>\n<br>\n#insert&nbsp;new&nbsp;slider<br>\nbpy.context.scene.MOM_Items[9].id_type&nbsp;=&nbsp;'objects'<br>\nbpy.context.scene.MOM_Items[9].id.objects=&nbsp;control<br>\nbpy.context.scene.MOM_Items[9].data_path='location'<br>\nbpy.context.scene.MOM_Items[9].array=2<br>\nbpy.context.scene.MOM_Items[9].rescale_mode&nbsp;=&nbsp;'Auto'<br>\nbpy.context.scene.MOM_Items[9].mode&nbsp;=&nbsp;'Both'<br>\nbpy.context.scene.MOM_Items[9].rescale_blender_low=0<br>\nbpy.context.scene.MOM_Items[9].rescale_blender_high=10<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n#exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].location.x&nbsp;=&nbsp;float(o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AlocX)\")<br>\n#exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].location.y&nbsp;=&nbsp;float(o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AlocY)\")<br>\n#exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].location.z&nbsp;=&nbsp;float(o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AlocZ)\")<br>\n#exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].rotation_euler.x&nbsp;=&nbsp;float(o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"ArotX)\")<br>\n#exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].rotation_euler.y&nbsp;=&nbsp;float(o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"ArotY)\")<br>\n#exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].rotation_euler.z&nbsp;=&nbsp;float(o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"ArotZ)\")<br>\n#exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].scale.x&nbsp;=&nbsp;float(o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AscaleX)\")<br>\n#exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].scale.y&nbsp;=&nbsp;float(o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AscaleY)\")<br>\n#exec(\"objs[\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"].scale.z&nbsp;=&nbsp;float(o\"&nbsp;+&nbsp;str(n)&nbsp;+&nbsp;\"AscaleZ)\")<br>\n'''<br>\n#clear&nbsp;midi&nbsp;errors<br>\nroutes&nbsp;=&nbsp;bpy.context.scene.MOM_Items<br>\nfor&nbsp;route&nbsp;in&nbsp;routes:<br>\n&nbsp;if&nbsp;route.alert&nbsp;==&nbsp;True:<br>\n&nbsp;&nbsp;route.id_type&nbsp;=&nbsp;'worlds'&nbsp;<br>\n&nbsp;&nbsp;route.id.worlds&nbsp;=&nbsp;bpy.data.worlds[\"World\"]<br>\n&nbsp;&nbsp;route.data_path&nbsp;=&nbsp;\"node_tree.nodes[\\\"Background\\\"].inputs[1].default_value\"<br>\n&nbsp;&nbsp;route.mode&nbsp;=&nbsp;'Off'<br>\n&nbsp;&nbsp;route.rescale_mode&nbsp;=&nbsp;'Auto'<br>\n'''<br>\nbpy.ops.ed.undo_push()</link&nbsp;rel=\"stylesheet\"&nbsp;href=\"noteq.css\"&nbsp;media=\"screen&nbsp;and&nbsp;(max-device-width:&nbsp;800px)\"&nbsp;></link&nbsp;rel=\"stylesheet\"&nbsp;href=\"mainq.css\"&nbsp;media=\"screen\"&nbsp;></meta&nbsp;name=\"viewport\"&nbsp;content=\"width=device-width,&nbsp;initial-scale=1.0,\">\n</div>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n10:18 pm</dco> &nbsp;<qco> What's your favorite song that has not been written yet?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n10:18 pm</dco> &nbsp;<qco> How do ask a question?\n<br></qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n10:00 pm</dco> &nbsp;<qco> Are u a apple</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n9:41 pm</dco> &nbsp;<qco> What are your opinions on Velcro?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n9:37 pm</dco> &nbsp;<qco> How do bananas reproduce?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n9:35 pm</dco> &nbsp;<qco> your counter-explanation of hi i'm steve is one of the best things i've ever read. would you ever do that for more of your videos/songs? </qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or would that require more essays of bullshit to prompt it</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n9:16 pm</dco> &nbsp;<qco> Do you like phone or computer for gaming?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n9:04 pm</dco> &nbsp;<qco> ur never afaraid to be yourself are you? </qco></h3><h3><qco> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fuck I look up to it so much</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n9:03 pm</dco> &nbsp;<qco> what's your favorite soup?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n9:03 pm</dco> &nbsp;<qco> does music frustrate you?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n9:01 pm</dco> &nbsp;<qco> Why do you think the corona is still going on even though the symptoms are similar to the flu</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n8:57 pm</dco> &nbsp;<qco> when do you estimate that you'll start working on youtube again? if not youtube, then what other profession?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n8:52 pm</dco> &nbsp;<qco> Will you definitely upload more recent journal entries sometime?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n8:51 pm</dco> &nbsp;<qco> What should I do, I took on too many projects to provide people with stuff, with deadlines coming up soon and there's no way I'll be able to finish all of it in time.</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n8:49 pm</dco> &nbsp;<qco> during this quarantine, I think you could help people out by answering, what are some things you can do with bread inside? I have a prototype list attached.\n<br>\n<br>-Eat Bread\n<br>-Drink Bread\n<br>-Fix Bread (With Bread Glue)\n<br>-Make a model plane out of Bread\n<br>-Fly the Plane to-\n<br>Wait no\n<br>Nix that last one\n<br>Stay inside\n<br>Don't leave the house\n<br>Be Safe, thanks for your help\n<br>\n<br>-philosopher of bread, \n<br>Jammeson Wheatus\n<br></qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n8:31 pm</dco> &nbsp;<qco> What are potatoes?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n7:59 pm</dco> &nbsp;<qco> I know you just did a bad thing, but do you plan on doing a good thing?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n7:14 pm</dco> &nbsp;<qco> what is your favourite sandwich filling?</qco> </h3>"
  },
  {
    "html": "<h3> <dco>4.9.20&nbsp; \n7:03 pm</dco> &nbsp;<qco> It's just occurred to me that someone could ask you what number the countdown timer is at, and you could just not publish the question, ultimately having full control over the countdown timer. Now I know you make it up anyway, but do you actually have a rough idea when the countdown timer will be up?... What number is it at now?&nbsp;</qco> </h3>"
  }
]
